# Used to automatically start the ssh-agent when a terminal loads
env=~/.ssh/agent.env

# Load ssh-agent environment variables
agent_load_env() {
    test -f "$env" && . "$env" >| /dev/null ;
}

# Actually start the ssh-agent
agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ;
}

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ "$agent_run_state" = 2 ]; then
    agent_start
fi

# Note: This will print something that looks like an error if no `rsa` or `ed25519` keys are found.
# It doesn't stop execution of this file, unless you `set -e`.
# ssh-add ~/.ssh/*_rsa
ssh-add ~/.ssh/*_ed25519

unset env


# Source credentials
source ~/.creds.d/.netspi
source ~/.creds.d/.github

# Git stuff from @jsleeper; if it breaks call him
alias ga='git add'
alias gb='git branch'
alias gbd='git branch -D'
alias gcan='git commit --amend --no-edit'
alias gcl='git clean -ffxd'
alias gcm='git commit --message'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gd='git diff --ws-error-highlight=all'
alias gdc='git diff --ws-error-highlight=all --cached'
alias gdcp='git diff --patience --ws-error-highlight=all --cached'
alias gdp='git diff --patience --ws-error-highlight=all'
alias gf='git fetch --prune'
alias gfp='git fetch --prune && git pull --rebase --autostash'
alias glg='git log --oneline --graph --all --decorate'
alias gp='git push --set-upstream origin HEAD'
alias grh='git reset --hard @{u}'
alias gs='git status'
alias gr='git restore'
alias gpl='git pull'

# General aliasses
alias repos='cd ~/Documents/repos'
alias reload='omz reload'
alias vim='nvim'

# Make uuidgen output lowercase, when on macOS
if [[ `uname` == Darwin ]] then
  alias uuidgen='uuidgen | tr A-F a-f'
fi

function cdl () { cd "$@" && ls; }
function mkcd () { mkdir -p "$@" && eval cd "\"\$$#\""; }
function rename () { for i in $1*; do mv "$i" "${i/$1/$2}"; done; }
function rmia () { docker images | grep "$1" | tr -s ' ' | cut -d ' ' -f 2 | xargs -I {} docker rmi "$1":{} }

for file in ~/.fns/*.sh; do
  filename=$(basename $file)
  echo "Function added: '${filename%.*}'"
  source $file
done

# Add Visual Studio Code (code) to $PATH
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# Setup homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# No idea what these are used for; they're from netspi
export AWS_BEDROCK_ROLE_ARN=arn:aws:iam::835505072120:role/CrossAccountChatbotBedrockAccess
export AWS_BEDROCK_ACCESS_EXTERNAL_ID=9486346261

# Setup pyenv
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

# Created by `pipx` on 2024-08-16 16:59:20
# export PATH="$PATH:/Users/sgomena/.local/bin"

export GOBIN="$HOME/go/bin"
export PATH="$PATH:$GOBIN"

# Added by Toolbox App
export PATH="$PATH:/Users/sgomena/Library/Application Support/JetBrains/Toolbox/scripts"

# Created by `pipx` on 2024-08-16 16:59:20
export PATH="$PATH:/Users/sgomena/.local/bin"

